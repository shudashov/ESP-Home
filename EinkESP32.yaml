substitutions:
  name: "esp32-eink-v3"
  friendly_name: esp32-eink-v3

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2024.6.0
  name_add_mac_suffix: false
  project:
    name: esphome.web
    version: '1.0'

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
- platform: esphome

# Allow provisioning Wi-Fi via serial
improv_serial:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  output_power: 15

# Include custom fonts
font:
  - file: 'fonts/comic.ttf'
    id: font_small
    size: 30
  - file: 'fonts/comic.ttf'
    id: font_large
    size: 120



# Pins for Waveshare ePaper ESP Board
spi:
  clk_pin: GPIO13
  mosi_pin: GPIO14

time:
  - platform: homeassistant
    id: homeassistant_time

sensor:
  - platform: homeassistant
    entity_id: sensor.ambient_temperature 
    id: outdoor_temperature
  - platform: homeassistant
    entity_id: sensor.bedroom_temperature
    id: indoor_temperature
  - platform: homeassistant
    entity_id: sensor.ambient_pressure
    id: outdoor_pressure
  - platform: homeassistant
    entity_id: sensor.forecast_temperature_0
    id: forecast_temperature_0
  - platform: homeassistant
    entity_id: sensor.forecast_temperature_1
    id: forecast_temperature_1
  - platform: homeassistant
    entity_id: sensor.forecast_temperature_2
    id: forecast_temperature_2
  - platform: homeassistant
    entity_id: sensor.forecast_temperature_3
    id: forecast_temperature_3

binary_sensor:
  - platform: homeassistant
    entity_id: binary_sensor.pressure_falling
    id: bs_pressure_falling
  - platform: homeassistant
    entity_id: binary_sensor.pressure_rising
    id: bs_pressure_rising 
  - platform: homeassistant
    entity_id: binary_sensor.ambient_temp_falling
    id: bs_outdoor_temperature_falling
  - platform: homeassistant
    entity_id: binary_sensor.ambient_temp_rising
    id: bs_outdoor_temperature_rising

text_sensor:
  - platform: homeassistant
    entity_id: sensor.forecast_condition_0
    id: ts_forecast_condition_0
  - platform: homeassistant
    entity_id: sensor.forecast_condition_1
    id: ts_forecast_condition_1
  - platform: homeassistant
    entity_id: sensor.forecast_condition_2
    id: ts_forecast_condition_2
  - platform: homeassistant
    entity_id: sensor.forecast_condition_3
    id: ts_forecast_condition_3

image:
  - file: "images/Pravda_Gazeta_logo.png"
    id: header
  - file: "images/arrow_down.png"
    id: arrow_downward
  - file: "images/arrow_up.png"
    id: arrow_upward
  - file: mdi:weather-sunny
    id: img_sunny
    resize: 100x100
  - file: mdi:weather-partly-cloudy
    id: img_partlycloudy
    resize: 100x100
  - file: mdi:weather-night
    id: img_clear_night
    resize: 100x100
  - file: mdi:weather-rainy
    id: img_rainy
    resize: 100x100
  - file: mdi:weather-cloudy
    id: img_cloudy
    resize: 100x100

# Now render everything on the ePaper screen.
display:
  - platform: waveshare_epaper
    id: eink_display
    cs_pin: GPIO15
    dc_pin: GPIO27
    busy_pin: GPIO25
    reset_pin: GPIO26
    reset_duration: 2ms
    model: 7.50inV2alt
    update_interval: 500s
    rotation: 90°
    lambda: |-
      it.image(0, 0, id(header));
      it.strftime(240, 90, id(font_small), TextAlign::TOP_CENTER, "%A %b %d", id(homeassistant_time).now());
      it.printf(20, 110, id(font_small),"out:");
      it.printf(240, 100, id(font_large),TextAlign::TOP_CENTER,"%.1f°", id(outdoor_temperature).state);
      it.printf(20, 270, id(font_small),"in:");
      it.printf(240, 260, id(font_large),TextAlign::TOP_CENTER,"%.1f°", id(indoor_temperature).state);
      it.printf(240, 420, id(font_large),TextAlign::TOP_CENTER,"%.0f", id(outdoor_pressure).state);
      if(id(bs_pressure_falling).state){ it.image(410, 510,id(arrow_downward)); }
      if(id(bs_pressure_rising).state){ it.image(410, 510,id(arrow_upward)); }
      if(id(bs_outdoor_temperature_falling).state){ it.image(410, 190,id(arrow_downward)); }
      if(id(bs_outdoor_temperature_rising).state){ it.image(410, 190,id(arrow_upward)); }
      if(id(ts_forecast_condition_0).state == "partlycloudy"){ it.image(20, 600,id(img_partlycloudy)); }
      if(id(ts_forecast_condition_0).state == "rainy"){ it.image(20, 600,id(img_partlycloudy)); }
      if(id(ts_forecast_condition_0).state == "clear-night"){ it.image(20, 600,id(img_clear_night)); }
      if(id(ts_forecast_condition_0).state == "cloudy"){ it.image(20, 600,id(img_cloudy)); }
      it.printf(40, 700, id(font_small),"%.1f°",id(forecast_temperature_0).state);
      if(id(ts_forecast_condition_1).state == "partlycloudy"){ it.image(130, 600,id(img_partlycloudy)); }
      if(id(ts_forecast_condition_1).state == "rainy"){ it.image(130, 600,id(img_partlycloudy)); }
      if(id(ts_forecast_condition_1).state == "clear-night"){ it.image(130, 600,id(img_clear_night)); }
      if(id(ts_forecast_condition_1).state == "cloudy"){ it.image(130, 600,id(img_cloudy)); }
      it.printf(150, 700, id(font_small),"%.1f°",id(forecast_temperature_1).state);
      if(id(ts_forecast_condition_2).state == "partlycloudy"){ it.image(240, 600,id(img_partlycloudy)); }
      if(id(ts_forecast_condition_2).state == "rainy"){ it.image(240, 600,id(img_partlycloudy)); }
      if(id(ts_forecast_condition_2).state == "clear-night"){ it.image(240, 600,id(img_clear_night)); }
      if(id(ts_forecast_condition_2).state == "cloudy"){ it.image(240, 600,id(img_cloudy)); }
      it.printf(260, 700, id(font_small),"%.1f°",id(forecast_temperature_2).state);
      if(id(ts_forecast_condition_3).state == "partlycloudy"){ it.image(350, 600,id(img_partlycloudy)); }
      if(id(ts_forecast_condition_3).state == "rainy"){ it.image(350, 600,id(img_partlycloudy)); }
      if(id(ts_forecast_condition_3).state == "clear-night"){ it.image(350, 600,id(img_clear_night)); }
      if(id(ts_forecast_condition_3).state == "cloudy"){ it.image(350, 600,id(img_cloudy)); }
      it.printf(370, 700, id(font_small),"%.1f°",id(forecast_temperature_3).state);
#      it.printf(20, 420, id(font_small),"pressure:");
