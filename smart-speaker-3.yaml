esphome:
  name: smart-speaker-3
  friendly_name: Smart-Speaker-3

esp32:
  board: esp-wrover-kit
  framework:
    type: esp-idf

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "au5BE1W6gN8idfZljr38nOL1Z9rV5zFKwmRUbnW5LwM="

ota:
  - platform: esphome
    password: "99375f3396d5027718d6dc52a7b0850a"
  
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  
i2c:
  - id: i2c_bus
    sda: GPIO18
    scl: GPIO23

improv_serial:

esp32_improv:
  authorizer: none

external_components:
  - source: github://pr#3552  # DAC support https://github.com/esphome/esphome/pull/3552
    components: [es8388]
    refresh: 0s
  - source: github://pr#5230
    components:
      - esp_adf
    refresh: 0s

es8388:

output:
  - platform: gpio
    id: green_light
    pin: GPIO22

i2s_audio:
  - id: i2s_audio_bus
    i2s_lrclk_pin: GPIO25
    i2s_bclk_pin: GPIO5

microphone:
  - platform: i2s_audio
    id: va_microphone
    i2s_din_pin: GPIO35
    adc_type: external
    pdm: false

speaker:
  - platform: i2s_audio
    id: va_speaker
    dac_type: external
    i2s_dout_pin: GPIO26
    mode: stereo

esp_adf:

voice_assistant:
  id: va
  microphone: va_microphone
  speaker: va_speaker
  use_wake_word: true
  noise_suppression_level: 2
  auto_gain: 31dBFS
  volume_multiplier: 2.0
  vad_threshold: 3
  on_listening:
    - output.turn_on:
        id: green_light
  on_stt_vad_end:
    - output.turn_off:
        id: green_light
  on_tts_start:
    - output.turn_on:
        id: green_light
  on_end:
    - delay: 100ms
    - wait_until:
        not:
          speaker.is_playing:
    - output.turn_off:
        id: green_light
  on_error:
    - output.turn_off:
        id: green_light
    - delay: 1s
  on_client_connected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.start_continuous:
          - output.turn_off:
              id: green_light
  on_client_disconnected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.stop:

switch:
  - platform: template
    name: Use wake word
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - lambda: id(va).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
      - output.turn_off:
          id: green_light
    on_turn_off:
      - voice_assistant.stop
      - lambda: id(va).set_use_wake_word(false);
      - output.turn_off:
          id: green_light
